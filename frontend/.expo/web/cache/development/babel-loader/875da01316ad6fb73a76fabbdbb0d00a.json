{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"progress\", \"onPress\", \"style\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated, { useAnimatedProps, useAnimatedStyle } from 'react-native-reanimated';\nvar PROGRESS_EPSILON = 0.05;\nvar Overlay = React.forwardRef(function Overlay(_ref, ref) {\n  var progress = _ref.progress,\n    onPress = _ref.onPress,\n    style = _ref.style,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var animatedStyle = useAnimatedStyle(function () {\n    var _f = function _f() {\n      return {\n        opacity: progress.value,\n        zIndex: progress.value > PROGRESS_EPSILON ? 0 : -1\n      };\n    };\n    _f._closure = {\n      progress: progress,\n      PROGRESS_EPSILON: PROGRESS_EPSILON\n    };\n    _f.asString = \"function _f(){const{progress,PROGRESS_EPSILON}=jsThis._closure;{return{opacity:progress.value,zIndex:progress.value>PROGRESS_EPSILON?0:-1};}}\";\n    _f.__workletHash = 1802421920871;\n    _f.__location = \"C:\\\\Users\\\\Quan Doan\\\\Desktop\\\\fullstack-SpringBoot-React\\\\practice-library-app\\\\frontend\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Overlay.js (13:41)\";\n    _f.__optimalization = 3;\n    return _f;\n  }());\n  var animatedProps = useAnimatedProps(function () {\n    var _f = function _f() {\n      var active = progress.value > PROGRESS_EPSILON;\n      return {\n        pointerEvents: active ? 'auto' : 'none',\n        accessibilityElementsHidden: !active,\n        importantForAccessibility: active ? 'auto' : 'no-hide-descendants'\n      };\n    };\n    _f._closure = {\n      progress: progress,\n      PROGRESS_EPSILON: PROGRESS_EPSILON\n    };\n    _f.asString = \"function _f(){const{progress,PROGRESS_EPSILON}=jsThis._closure;{const active=progress.value>PROGRESS_EPSILON;return{pointerEvents:active?'auto':'none',accessibilityElementsHidden:!active,importantForAccessibility:active?'auto':'no-hide-descendants'};}}\";\n    _f.__workletHash = 1603427272892;\n    _f.__location = \"C:\\\\Users\\\\Quan Doan\\\\Desktop\\\\fullstack-SpringBoot-React\\\\practice-library-app\\\\frontend\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Overlay.js (21:41)\";\n    return _f;\n  }());\n  return React.createElement(Animated.View, _extends({}, props, {\n    ref: ref,\n    style: [styles.overlay, overlayStyle, animatedStyle, style],\n    animatedProps: animatedProps\n  }), React.createElement(Pressable, {\n    onPress: onPress,\n    style: styles.pressable\n  }));\n});\nvar overlayStyle = Platform.select({\n  web: {\n    WebkitTapHighlightColor: 'transparent'\n  },\n  default: {}\n});\nvar styles = StyleSheet.create({\n  overlay: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  }),\n  pressable: {\n    flex: 1,\n    pointerEvents: 'auto'\n  }\n});\nexport default Overlay;","map":{"version":3,"sources":["Overlay.tsx"],"names":["React","Pressable","StyleSheet","Animated","useAnimatedProps","useAnimatedStyle","PROGRESS_EPSILON","Overlay","forwardRef","progress","onPress","style","props","ref","animatedStyle","opacity","value","zIndex","animatedProps","active","pointerEvents","accessibilityElementsHidden","importantForAccessibility","styles","overlay","overlayStyle","pressable","Platform","select","web","WebkitTapHighlightColor","default","create","absoluteFillObject","backgroundColor","flex"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA;AAAA;AAAA;AAE9B,OAAOG,QAAQ,IACbC,gBAAgB,EAChBC,gBAAgB,QACX,yBAAyB;AAEhC,IAAMC,gBAAgB,GAAG,IAAI;AAO7B,IAAMC,OAAO,GAAGP,KAAK,CAACQ,UAAU,CAAC,SAASD,OAAO,CAAA,IAAA,EAE/CM,GAA6B,EAC7B;EAFA,IAAEJ,QAAQ,GAAmC,IAAA,CAA3CA,QAAQ;IAAEC,OAAO,GAA0B,IAAA,CAAjCA,OAAO;IAAEC,KAAK,GAAmB,IAAA,CAAxBA,KAAK;IAAKC,KAAAA,4BAAc,IAAA;EAG7C,IAAME,aAAa,GAAGT,gBAAgB;IAAA,uBAAO;MAC3C,OAAO;QACLU,OAAO,EAAEN,QAAQ,CAACO,KAAK;QAGvBC,MAAM,EAAER,QAAQ,CAACO,KAAK,GAAGV,gBAAgB,GAAG,CAAC,GAAG,CAAC;MACnD,CAAC;IACH,CAAC;IAAA;MAAA,UAVD,QAAA;MAAA,kBAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA,IAUE;EAEF,IAAMY,aAAa,GAAGd,gBAAgB;IAAA,uBAAO;MAC3C,IAAMe,MAAM,GAAGV,QAAQ,CAACO,KAAK,GAAGV,gBAAgB;MAEhD,OAAO;QACLc,aAAa,EAAED,MAAM,GAAG,MAAM,GAAG,MAAM;QACvCE,2BAA2B,EAAE,CAACF,MAAM;QACpCG,yBAAyB,EAAEH,MAAM,GAAG,MAAM,GAAG;MAC/C,CAAC;IACH,CAAC;IAAA;MAAA,UAlCc,QAAElB;MAAAA,kBAAWC;IAAkB;IAAA;IAAA;IAAA;IAAA;EAAA,IAkC5C;EAEF,OACE,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,EAAA,QAAA,CAAA,CAAA,CAAA,EACRU,KAAK,EAAA;IACT,GAAG,EAAEC,GAAI;IACT,KAAK,EAAE,CAACU,MAAM,CAACC,OAAO,EAAEC,YAAY,EAAEX,aAAa,EAAEH,KAAK,CAAE;IAC5D,aAAa,EAAEO;EAAc,CAAA,CAAA,EAE7B,KAAA,CAAA,aAAA,CAAC,SAAS,EAAA;IAAC,OAAO,EAAER,OAAQ;IAAC,KAAK,EAAEa,MAAM,CAACG;EAAU,CAAA,CAAG,CAC1C;AAEpB,CAAC,CAAC;AAEF,IAAMD,YAAY,GAAGE,QAAQ,CAACC,MAAM,CAAyB;EAC3DC,GAAG,EAAE;IAGHC,uBAAuB,EAAE;EAC3B,CAAC;EACDC,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC;AAEF,IAAMR,MAAM,GAAGrB,UAAU,CAAC8B,MAAM,CAAC;EAC/BR,OAAO,kCACFtB,UAAU,CAAC+B,kBAAkB;IAChCC,eAAe,EAAE;EAAA,EAClB;EACDR,SAAS,EAAE;IACTS,IAAI,EAAE,CAAC;IACPf,aAAa,EAAE;EACjB;AACF,CAAC,CAAC;AAEF,eAAeb,OAAO","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Platform, Pressable, StyleSheet } from 'react-native';\nimport Animated, { useAnimatedProps, useAnimatedStyle } from 'react-native-reanimated';\nconst PROGRESS_EPSILON = 0.05;\nconst Overlay = /*#__PURE__*/React.forwardRef(function Overlay(_ref, ref) {\n  let {\n    progress,\n    onPress,\n    style,\n    ...props\n  } = _ref;\n  const animatedStyle = useAnimatedStyle(() => {\n    return {\n      opacity: progress.value,\n      // We don't want the user to be able to press through the overlay when drawer is open\n      // We can send the overlay behind the screen to avoid it\n      zIndex: progress.value > PROGRESS_EPSILON ? 0 : -1\n    };\n  });\n  const animatedProps = useAnimatedProps(() => {\n    const active = progress.value > PROGRESS_EPSILON;\n    return {\n      pointerEvents: active ? 'auto' : 'none',\n      accessibilityElementsHidden: !active,\n      importantForAccessibility: active ? 'auto' : 'no-hide-descendants'\n    };\n  });\n  return /*#__PURE__*/React.createElement(Animated.View, _extends({}, props, {\n    ref: ref,\n    style: [styles.overlay, overlayStyle, animatedStyle, style],\n    animatedProps: animatedProps\n  }), /*#__PURE__*/React.createElement(Pressable, {\n    onPress: onPress,\n    style: styles.pressable\n  }));\n});\nconst overlayStyle = Platform.select({\n  web: {\n    // Disable touch highlight on mobile Safari.\n    // WebkitTapHighlightColor must be used outside of StyleSheet.create because react-native-web will omit the property.\n    WebkitTapHighlightColor: 'transparent'\n  },\n  default: {}\n});\nconst styles = StyleSheet.create({\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  pressable: {\n    flex: 1,\n    pointerEvents: 'auto'\n  }\n});\nexport default Overlay;\n//# sourceMappingURL=Overlay.js.map"]},"metadata":{},"sourceType":"module"}