{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from 'react';\nimport { useTailwind } from 'tailwind-rn';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { TextInput } from 'react-native-gesture-handler';\nimport { Button } from '@rneui/base';\nimport { UserLogin } from \"../Actions/UserAction\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var tw = useTailwind();\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.Users;\n    }),\n    user = _useSelector.user,\n    userSuccess = _useSelector.userSuccess,\n    userError = _useSelector.userError,\n    message = _useSelector.message;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var navigation = useNavigation();\n  useEffect(function () {\n    if (user && userSuccess) {\n      console.log(user);\n      Alert.alert(\"login successfully\");\n      navigation.navigate(\"Home\");\n    } else {\n      Alert.alert(\"try to login again\");\n    }\n  }, [user, userSuccess, dispatch]);\n  var submitFunction = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (username && password) {\n        yield dispatch(UserLogin({\n          username: username,\n          password: password\n        }));\n      } else {\n        Alert.alert(\"please type some thing\");\n      }\n    });\n    return function submitFunction() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(SafeAreaView, {\n    style: tw('flex-1'),\n    children: [_jsxs(View, {\n      style: tw('w-full my-2 px-4 flex items-center justify-start'),\n      children: [_jsx(Text, {\n        style: tw(' w-full mb-2 font-bold text-blue-400 text-lg px-4'),\n        children: \"Username\"\n      }), _jsx(TextInput, {\n        onChangeText: function onChangeText(text) {\n          return setUsername(text);\n        },\n        value: username,\n        placeholder: \"your username\",\n        style: tw('rounded-full py-2 px-4 w-full bg-slate-300 text-base')\n      })]\n    }), _jsxs(View, {\n      style: tw('w-full my-2 px-4 flex items-center justify-start'),\n      children: [_jsx(Text, {\n        style: tw(' w-full mb-2 font-bold text-blue-400 text-lg px-4'),\n        children: \"password\"\n      }), _jsx(TextInput, {\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        value: password,\n        placeholder: \"your password\",\n        secureTextEntry: true,\n        style: tw('rounded-full py-2 px-4 w-full bg-slate-300 text-base')\n      })]\n    }), _jsx(Button, {\n      onPress: submitFunction,\n      title: \"Login\",\n      buttonStyle: tw('mx-auto rounded-full px-4 py-2 mt-4 bg-sky-400 text-lg text-white')\n    })]\n  });\n};\nexport default LoginScreen;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useEffect","useState","useTailwind","useDispatch","useSelector","SafeAreaView","TextInput","Button","UserLogin","useNavigation","LoginScreen","tw","dispatch","state","Users","user","userSuccess","userError","message","username","setUsername","password","setPassword","navigation","console","log","Alert","alert","navigate","submitFunction","text","styles","StyleSheet","create"],"sources":["C:/Users/Quan Doan/Desktop/fullstack-SpringBoot-React/practice-library-app/frontend/Screen/LoginScreen.jsx"],"sourcesContent":["import { Alert, StyleSheet, Text, View } from 'react-native'\r\nimport React, { useEffect, useState } from 'react'\r\nimport {useTailwind} from 'tailwind-rn';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nimport { Button } from '@rneui/base';\r\nimport { UserLogin } from '../Actions/UserAction';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst LoginScreen = () => {\r\n  const tw = useTailwind()\r\n  const dispatch = useDispatch()\r\n  const {user, userSuccess, userError, message} = useSelector(state => state.Users)\r\n  const [username, setUsername] = useState(null)\r\n  const [password, setPassword] = useState(null)\r\n  const navigation = useNavigation()\r\n  useEffect(() => {\r\n    if(user && userSuccess) {\r\n      console.log(user)\r\n      Alert.alert(\"login successfully\")\r\n      navigation.navigate(\"Home\")\r\n     } else {\r\n      Alert.alert(\"try to login again\")\r\n     }\r\n    \r\n  }, [user, userSuccess, dispatch])\r\n\r\n  const submitFunction = async () => {\r\n\r\n    if(username && password) {\r\n     await dispatch(UserLogin({username, password}))\r\n     \r\n\r\n    } else {\r\n      Alert.alert(\"please type some thing\")\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  return (\r\n    <SafeAreaView style={tw('flex-1')}>\r\n      <View style={tw('w-full my-2 px-4 flex items-center justify-start')}>\r\n        <Text style={tw(' w-full mb-2 font-bold text-blue-400 text-lg px-4')}>Username</Text>\r\n        <TextInput onChangeText={text => setUsername(text)} value={username} placeholder=\"your username\" style={tw('rounded-full py-2 px-4 w-full bg-slate-300 text-base')}></TextInput>\r\n      </View>\r\n      <View style={tw('w-full my-2 px-4 flex items-center justify-start')}>\r\n        <Text style={tw(' w-full mb-2 font-bold text-blue-400 text-lg px-4')}>password</Text>\r\n        <TextInput onChangeText={text => setPassword(text)} value={password} placeholder=\"your password\" secureTextEntry={true} style={tw('rounded-full py-2 px-4 w-full bg-slate-300 text-base')}></TextInput>\r\n      </View>\r\n      <Button onPress={submitFunction} title=\"Login\" buttonStyle={tw('mx-auto rounded-full px-4 py-2 mt-4 bg-sky-400 text-lg text-white')}></Button>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({})"],"mappings":"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"},"metadata":{},"sourceType":"module"}