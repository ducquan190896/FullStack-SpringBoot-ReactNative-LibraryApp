{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"style\", \"onPress\", \"onLongPress\", \"onPressIn\", \"onPressOut\", \"to\", \"accessibilityRole\"],\n  _excluded2 = [\"icon\", \"label\", \"labelStyle\", \"to\", \"focused\", \"allowFontScaling\", \"activeTintColor\", \"inactiveTintColor\", \"activeBackgroundColor\", \"inactiveBackgroundColor\", \"style\", \"onPress\", \"pressColor\", \"pressOpacity\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { PlatformPressable } from '@react-navigation/elements';\nimport { Link, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nvar LinkPressable = function LinkPressable(_ref) {\n  var children = _ref.children,\n    style = _ref.style,\n    _onPress = _ref.onPress,\n    onLongPress = _ref.onLongPress,\n    onPressIn = _ref.onPressIn,\n    onPressOut = _ref.onPressOut,\n    to = _ref.to,\n    accessibilityRole = _ref.accessibilityRole,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  if (Platform.OS === 'web' && to) {\n    return React.createElement(Link, _extends({}, rest, {\n      to: to,\n      style: [styles.button, style],\n      onPress: function onPress(e) {\n        if (!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && (\n        e.button == null || e.button === 0)) {\n          e.preventDefault();\n          _onPress === null || _onPress === void 0 ? void 0 : _onPress(e);\n        }\n      }\n      ,\n\n      onLongPress: onLongPress != null ? onLongPress : undefined,\n      onPressIn: onPressIn != null ? onPressIn : undefined,\n      onPressOut: onPressOut != null ? onPressOut : undefined\n    }), children);\n  } else {\n    return React.createElement(PlatformPressable, _extends({}, rest, {\n      accessibilityRole: accessibilityRole,\n      onPress: _onPress\n    }), React.createElement(View, {\n      style: style\n    }, children));\n  }\n};\n\nexport default function DrawerItem(props) {\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var icon = props.icon,\n    label = props.label,\n    labelStyle = props.labelStyle,\n    to = props.to,\n    _props$focused = props.focused,\n    focused = _props$focused === void 0 ? false : _props$focused,\n    allowFontScaling = props.allowFontScaling,\n    _props$activeTintColo = props.activeTintColor,\n    activeTintColor = _props$activeTintColo === void 0 ? colors.primary : _props$activeTintColo,\n    _props$inactiveTintCo = props.inactiveTintColor,\n    inactiveTintColor = _props$inactiveTintCo === void 0 ? Color(colors.text).alpha(0.68).rgb().string() : _props$inactiveTintCo,\n    _props$activeBackgrou = props.activeBackgroundColor,\n    activeBackgroundColor = _props$activeBackgrou === void 0 ? Color(activeTintColor).alpha(0.12).rgb().string() : _props$activeBackgrou,\n    _props$inactiveBackgr = props.inactiveBackgroundColor,\n    inactiveBackgroundColor = _props$inactiveBackgr === void 0 ? 'transparent' : _props$inactiveBackgr,\n    style = props.style,\n    onPress = props.onPress,\n    pressColor = props.pressColor,\n    pressOpacity = props.pressOpacity,\n    rest = _objectWithoutProperties(props, _excluded2);\n  var _StyleSheet$flatten = StyleSheet.flatten(style || {}),\n    _StyleSheet$flatten$b = _StyleSheet$flatten.borderRadius,\n    borderRadius = _StyleSheet$flatten$b === void 0 ? 4 : _StyleSheet$flatten$b;\n  var color = focused ? activeTintColor : inactiveTintColor;\n  var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n  var iconNode = icon ? icon({\n    size: 24,\n    focused: focused,\n    color: color\n  }) : null;\n  return React.createElement(View, _extends({\n    collapsable: false\n  }, rest, {\n    style: [styles.container, {\n      borderRadius: borderRadius,\n      backgroundColor: backgroundColor\n    }, style]\n  }), React.createElement(LinkPressable, {\n    onPress: onPress,\n    style: [styles.wrapper, {\n      borderRadius: borderRadius\n    }],\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      selected: focused\n    },\n    pressColor: pressColor,\n    pressOpacity: pressOpacity,\n    to: to\n  }, React.createElement(React.Fragment, null, iconNode, React.createElement(View, {\n    style: [styles.label, {\n      marginLeft: iconNode ? 32 : 0,\n      marginVertical: 5\n    }]\n  }, typeof label === 'string' ? React.createElement(Text, {\n    numberOfLines: 1,\n    allowFontScaling: allowFontScaling,\n    style: [{\n      color: color,\n      fontWeight: '500'\n    }, labelStyle]\n  }, label) : label({\n    color: color,\n    focused: focused\n  })))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n    overflow: 'hidden'\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8\n  },\n  label: {\n    marginRight: 32,\n    flex: 1\n  },\n  button: {\n    display: 'flex'\n  }\n});","map":{"version":3,"sources":["DrawerItem.tsx"],"names":["PlatformPressable","Link","useTheme","Color","React","LinkPressable","children","style","onPress","onLongPress","onPressIn","onPressOut","to","accessibilityRole","rest","Platform","OS","styles","button","e","metaKey","altKey","ctrlKey","shiftKey","preventDefault","undefined","DrawerItem","props","colors","icon","label","labelStyle","focused","allowFontScaling","activeTintColor","primary","inactiveTintColor","text","alpha","rgb","string","activeBackgroundColor","inactiveBackgroundColor","pressColor","pressOpacity","borderRadius","StyleSheet","flatten","color","backgroundColor","iconNode","size","container","wrapper","selected","marginLeft","marginVertical","fontWeight","create","marginHorizontal","overflow","flexDirection","alignItems","padding","marginRight","flex","display"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport { PlatformPressable } from '@react-navigation/elements';\nimport { Link, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport { Platform, StyleSheet, Text, View } from 'react-native';\nconst LinkPressable = _ref => {\n  let {\n    children,\n    style,\n    onPress,\n    onLongPress,\n    onPressIn,\n    onPressOut,\n    to,\n    accessibilityRole,\n    ...rest\n  } = _ref;\n  if (Platform.OS === 'web' && to) {\n    // React Native Web doesn't forward `onClick` if we use `TouchableWithoutFeedback`.\n    // We need to use `onClick` to be able to prevent default browser handling of links.\n    return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n      to: to,\n      style: [styles.button, style],\n      onPress: e => {\n        if (!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && (\n        // ignore clicks with modifier keys\n        e.button == null || e.button === 0) // ignore everything but left clicks\n        ) {\n          e.preventDefault();\n          onPress === null || onPress === void 0 ? void 0 : onPress(e);\n        }\n      }\n      // types for PressableProps and TextProps are incompatible with each other by `null` so we\n      // can't use {...rest} for these 3 props\n      ,\n      onLongPress: onLongPress ?? undefined,\n      onPressIn: onPressIn ?? undefined,\n      onPressOut: onPressOut ?? undefined\n    }), children);\n  } else {\n    return /*#__PURE__*/React.createElement(PlatformPressable, _extends({}, rest, {\n      accessibilityRole: accessibilityRole,\n      onPress: onPress\n    }), /*#__PURE__*/React.createElement(View, {\n      style: style\n    }, children));\n  }\n};\n\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n */\nexport default function DrawerItem(props) {\n  const {\n    colors\n  } = useTheme();\n  const {\n    icon,\n    label,\n    labelStyle,\n    to,\n    focused = false,\n    allowFontScaling,\n    activeTintColor = colors.primary,\n    inactiveTintColor = Color(colors.text).alpha(0.68).rgb().string(),\n    activeBackgroundColor = Color(activeTintColor).alpha(0.12).rgb().string(),\n    inactiveBackgroundColor = 'transparent',\n    style,\n    onPress,\n    pressColor,\n    pressOpacity,\n    ...rest\n  } = props;\n  const {\n    borderRadius = 4\n  } = StyleSheet.flatten(style || {});\n  const color = focused ? activeTintColor : inactiveTintColor;\n  const backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n  const iconNode = icon ? icon({\n    size: 24,\n    focused,\n    color\n  }) : null;\n  return /*#__PURE__*/React.createElement(View, _extends({\n    collapsable: false\n  }, rest, {\n    style: [styles.container, {\n      borderRadius,\n      backgroundColor\n    }, style]\n  }), /*#__PURE__*/React.createElement(LinkPressable, {\n    onPress: onPress,\n    style: [styles.wrapper, {\n      borderRadius\n    }],\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      selected: focused\n    },\n    pressColor: pressColor,\n    pressOpacity: pressOpacity,\n    to: to\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, iconNode, /*#__PURE__*/React.createElement(View, {\n    style: [styles.label, {\n      marginLeft: iconNode ? 32 : 0,\n      marginVertical: 5\n    }]\n  }, typeof label === 'string' ? /*#__PURE__*/React.createElement(Text, {\n    numberOfLines: 1,\n    allowFontScaling: allowFontScaling,\n    style: [{\n      color,\n      fontWeight: '500'\n    }, labelStyle]\n  }, label) : label({\n    color,\n    focused\n  })))));\n}\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n    overflow: 'hidden'\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8\n  },\n  label: {\n    marginRight: 32,\n    flex: 1\n  },\n  button: {\n    display: 'flex'\n  }\n});\n//# sourceMappingURL=DrawerItem.js.map"]},"metadata":{},"sourceType":"module"}