{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAccessibilityInfo = void 0;\nvar react_1 = require(\"react\");\nvar react_native_1 = require(\"react-native-web/dist/index\");\nfunction useAccessibilityStateListener(eventName, initializerName) {\n  var _a = react_1.useState(undefined),\n    isEnabled = _a[0],\n    setIsEnabled = _a[1];\n  react_1.useEffect(function () {\n    if (!react_native_1.AccessibilityInfo[initializerName]) {\n      return;\n    }\n    react_native_1.AccessibilityInfo[initializerName]().then(setIsEnabled);\n    var subscription = react_native_1.AccessibilityInfo.addEventListener(eventName, setIsEnabled);\n    return function () {\n      if (typeof (subscription === null || subscription === void 0 ? void 0 : subscription.remove) === 'function') {\n        subscription.remove();\n      } else {\n        react_native_1.AccessibilityInfo.removeEventListener(eventName, setIsEnabled);\n      }\n    };\n  }, [eventName, initializerName]);\n  return isEnabled;\n}\nfunction useAccessibilityInfo() {\n  var boldTextEnabled = useAccessibilityStateListener('boldTextChanged', 'isBoldTextEnabled');\n  var grayscaleEnabled = useAccessibilityStateListener('grayscaleChanged', 'isGrayscaleEnabled');\n  var invertColorsEnabled = useAccessibilityStateListener('invertColorsChanged', 'isInvertColorsEnabled');\n  var reduceMotionEnabled = useAccessibilityStateListener('reduceMotionChanged', 'isReduceMotionEnabled');\n  var reduceTransparencyEnabled = useAccessibilityStateListener('reduceTransparencyChanged', 'isReduceTransparencyEnabled');\n  var screenReaderEnabled = useAccessibilityStateListener('screenReaderChanged', 'isScreenReaderEnabled');\n  return {\n    screenReaderEnabled: screenReaderEnabled,\n    grayscaleEnabled: grayscaleEnabled,\n    invertColorsEnabled: invertColorsEnabled,\n    reduceMotionEnabled: reduceMotionEnabled,\n    reduceTransparencyEnabled: reduceTransparencyEnabled,\n    boldTextEnabled: boldTextEnabled\n  };\n}\nexports.useAccessibilityInfo = useAccessibilityInfo;","map":{"version":3,"sources":["../src/useAccessibilityInfo.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;AAAyC;AAWzC,SAAS,6BAA6B,CACpC,SAAuC,EACvC,eAAoD,EAAA;EAE9C,IAAA,EAAA,GAA4B,OAAA,CAAA,QAAQ,CAAsB,SAAS,CAAC;IAAnE,SAAS,GAAA,EAAA,CAAA,CAAA,CAAA;IAAE,YAAY,GAAA,EAAA,CAAA,CAAA,CAA4C;EAE1E,OAAA,CAAA,SAAS,CAAC,YAAA;IACR,IAAI,CAAC,cAAA,CAAA,iBAAiB,CAAC,eAAe,CAAC,EAAE;MACvC;IACD;IAED,cAAA,CAAA,iBAAiB,CAAC,eAAe,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC;IAEvD,IAAM,YAAY,GAAG,cAAA,CAAA,iBAAiB,CAAC,gBAAgB,CACrD,SAAS,EACT,YAAY,CACb;IAED,OAAO,YAAA;MAEL,IAAI,QAAO,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZ,YAAY,CAAE,MAAM,CAAA,KAAK,UAAU,EAAE;QAE9C,YAAY,CAAC,MAAM,EAAE;OACtB,MAAM;QAEL,cAAA,CAAA,iBAAiB,CAAC,mBAAmB,CAAC,SAAS,EAAE,YAAY,CAAC;MAC/D;IACH,CAAC;EACH,CAAC,EAAE,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;EAEhC,OAAO,SAAS;AAClB;AAEA,SAAgB,oBAAoB,GAAA;EAClC,IAAM,eAAe,GAAG,6BAA6B,CACnD,iBAAiB,EACjB,mBAAmB,CACpB;EACD,IAAM,gBAAgB,GAAG,6BAA6B,CACpD,kBAAkB,EAClB,oBAAoB,CACrB;EACD,IAAM,mBAAmB,GAAG,6BAA6B,CACvD,qBAAqB,EACrB,uBAAuB,CACxB;EACD,IAAM,mBAAmB,GAAG,6BAA6B,CACvD,qBAAqB,EACrB,uBAAuB,CACxB;EACD,IAAM,yBAAyB,GAAG,6BAA6B,CAC7D,2BAA2B,EAC3B,6BAA6B,CAC9B;EACD,IAAM,mBAAmB,GAAG,6BAA6B,CACvD,qBAAqB,EACrB,uBAAuB,CACxB;EAED,OAAO;IACL,mBAAmB,EAAA,mBAAA;IACnB,gBAAgB,EAAA,gBAAA;IAChB,mBAAmB,EAAA,mBAAA;IACnB,mBAAmB,EAAA,mBAAA;IACnB,yBAAyB,EAAA,yBAAA;IACzB,eAAe,EAAA;GAChB;AACH;AAlCA,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useAccessibilityInfo = void 0;\nvar react_1 = require(\"react\");\nvar react_native_1 = require(\"react-native\");\nfunction useAccessibilityStateListener(eventName, initializerName) {\n    var _a = react_1.useState(undefined), isEnabled = _a[0], setIsEnabled = _a[1];\n    react_1.useEffect(function () {\n        if (!react_native_1.AccessibilityInfo[initializerName]) {\n            return;\n        }\n        react_native_1.AccessibilityInfo[initializerName]().then(setIsEnabled);\n        var subscription = react_native_1.AccessibilityInfo.addEventListener(eventName, setIsEnabled);\n        return function () {\n            // @ts-expect-error - React Native >= 0.65\n            if (typeof (subscription === null || subscription === void 0 ? void 0 : subscription.remove) === 'function') {\n                // @ts-expect-error - need update @types/react-native@0.65.x\n                subscription.remove();\n            }\n            else {\n                // React Native < 0.65\n                react_native_1.AccessibilityInfo.removeEventListener(eventName, setIsEnabled);\n            }\n        };\n    }, [eventName, initializerName]);\n    return isEnabled;\n}\nfunction useAccessibilityInfo() {\n    var boldTextEnabled = useAccessibilityStateListener('boldTextChanged', 'isBoldTextEnabled');\n    var grayscaleEnabled = useAccessibilityStateListener('grayscaleChanged', 'isGrayscaleEnabled');\n    var invertColorsEnabled = useAccessibilityStateListener('invertColorsChanged', 'isInvertColorsEnabled');\n    var reduceMotionEnabled = useAccessibilityStateListener('reduceMotionChanged', 'isReduceMotionEnabled');\n    var reduceTransparencyEnabled = useAccessibilityStateListener('reduceTransparencyChanged', 'isReduceTransparencyEnabled');\n    var screenReaderEnabled = useAccessibilityStateListener('screenReaderChanged', 'isScreenReaderEnabled');\n    return {\n        screenReaderEnabled: screenReaderEnabled,\n        grayscaleEnabled: grayscaleEnabled,\n        invertColorsEnabled: invertColorsEnabled,\n        reduceMotionEnabled: reduceMotionEnabled,\n        reduceTransparencyEnabled: reduceTransparencyEnabled,\n        boldTextEnabled: boldTextEnabled,\n    };\n}\nexports.useAccessibilityInfo = useAccessibilityInfo;\n//# sourceMappingURL=useAccessibilityInfo.js.map"]},"metadata":{},"sourceType":"script"}