{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useClipboard = void 0;\nvar react_1 = require(\"react\");\nvar react_native_1 = require(\"react-native-web/dist/index\");\nvar listeners = new Set();\nfunction setString(content) {\n  react_native_1.Clipboard.setString(content);\n  listeners.forEach(function (listener) {\n    return listener(content);\n  });\n}\nfunction useClipboard() {\n  var _a = react_1.useState(''),\n    data = _a[0],\n    updateClipboardData = _a[1];\n  react_1.useEffect(function () {\n    react_native_1.Clipboard.getString().then(updateClipboardData);\n  }, []);\n  react_1.useEffect(function () {\n    listeners.add(updateClipboardData);\n    return function () {\n      listeners.delete(updateClipboardData);\n    };\n  }, []);\n  return [data, setString];\n}\nexports.useClipboard = useClipboard;","map":{"version":3,"sources":["../src/useClipboard.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;AAAyC;AAIzC,IAAM,SAAS,GAAG,IAAI,GAAG,EAAY;AAErC,SAAS,SAAS,CAAC,OAAe,EAAA;EAChC,cAAA,CAAA,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC;EAC5B,SAAS,CAAC,OAAO,CAAC,UAAC,QAAQ,EAAA;IAAK,OAAA,QAAQ,CAAC,OAAO,CAAC;EAAjB,CAAiB,CAAC;AACpD;AAEA,SAAgB,YAAY,GAAA;EACpB,IAAA,EAAA,GAA8B,OAAA,CAAA,QAAQ,CAAC,EAAE,CAAC;IAAzC,IAAI,GAAA,EAAA,CAAA,CAAA,CAAA;IAAE,mBAAmB,GAAA,EAAA,CAAA,CAAA,CAAgB;EAGhD,OAAA,CAAA,SAAS,CAAC,YAAA;IACR,cAAA,CAAA,SAAS,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EAGN,OAAA,CAAA,SAAS,CAAC,YAAA;IACR,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC;IAElC,OAAO,YAAA;MACL,SAAS,CAAC,MAAM,CAAC,mBAAmB,CAAC;IACvC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC;AAC1B;AAlBA,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useClipboard = void 0;\nvar react_1 = require(\"react\");\nvar react_native_1 = require(\"react-native\");\nvar listeners = new Set();\nfunction setString(content) {\n    react_native_1.Clipboard.setString(content);\n    listeners.forEach(function (listener) { return listener(content); });\n}\nfunction useClipboard() {\n    var _a = react_1.useState(''), data = _a[0], updateClipboardData = _a[1];\n    // Get initial data\n    react_1.useEffect(function () {\n        react_native_1.Clipboard.getString().then(updateClipboardData);\n    }, []);\n    // Listen for updates\n    react_1.useEffect(function () {\n        listeners.add(updateClipboardData);\n        return function () {\n            listeners.delete(updateClipboardData);\n        };\n    }, []);\n    return [data, setString];\n}\nexports.useClipboard = useClipboard;\n//# sourceMappingURL=useClipboard.js.map"]},"metadata":{},"sourceType":"script"}