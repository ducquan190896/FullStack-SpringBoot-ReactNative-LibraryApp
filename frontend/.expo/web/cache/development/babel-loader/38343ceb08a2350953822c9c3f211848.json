{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useImageDimensions = void 0;\nvar react_1 = require(\"react\");\nvar react_native_1 = require(\"react-native-web/dist/index\");\nfunction useImageDimensions(source, headers) {\n  var _a = react_1.useState({\n      loading: true\n    }),\n    result = _a[0],\n    setResult = _a[1];\n  react_1.useEffect(function () {\n    try {\n      if (typeof source === 'number') {\n        var _a = react_native_1.Image.resolveAssetSource(source),\n          width = _a.width,\n          height = _a.height;\n        setResult({\n          dimensions: {\n            width: width,\n            height: height,\n            aspectRatio: width / height\n          },\n          loading: false\n        });\n        return;\n      }\n      if (typeof source === 'object' && source.uri) {\n        setResult({\n          loading: true\n        });\n        if (typeof headers === 'object') {\n          react_native_1.Image.getSizeWithHeaders(source.uri, headers, function (width, height) {\n            return setResult({\n              dimensions: {\n                width: width,\n                height: height,\n                aspectRatio: width / height\n              },\n              loading: false\n            });\n          }, function (error) {\n            return setResult({\n              error: error,\n              loading: false\n            });\n          });\n        } else {\n          react_native_1.Image.getSize(source.uri, function (width, height) {\n            return setResult({\n              dimensions: {\n                width: width,\n                height: height,\n                aspectRatio: width / height\n              },\n              loading: false\n            });\n          }, function (error) {\n            return setResult({\n              error: error,\n              loading: false\n            });\n          });\n        }\n        return;\n      }\n      throw new Error('not implemented');\n    } catch (error) {\n      setResult({\n        error: error,\n        loading: false\n      });\n    }\n  }, [typeof source === 'object' ? source.uri : source, headers]);\n  return result;\n}\nexports.useImageDimensions = useImageDimensions;","map":{"version":3,"sources":["../src/useImageDimensions.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;AAAyC;AA0BzC,SAAgB,kBAAkB,CAChC,MAA6B,EAC7B,OAAmC,EAAA;EAE7B,IAAA,EAAA,GAAsB,OAAA,CAAA,QAAQ,CAAwB;MAAC,OAAO,EAAE;IAAI,CAAC,CAAC;IAArE,MAAM,GAAA,EAAA,CAAA,CAAA,CAAA;IAAE,SAAS,GAAA,EAAA,CAAA,CAAA,CAAoD;EAE5E,OAAA,CAAA,SAAS,CAAC,YAAA;IACR,IAAI;MACF,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;QACxB,IAAA,EAAA,GAAkB,cAAA,CAAA,KAAK,CAAC,kBAAkB,CAAC,MAAM,CAAC;UAAjD,KAAK,GAAA,EAAA,CAAA,KAAA;UAAE,MAAM,GAAA,EAAA,CAAA,MAAoC;QAExD,SAAS,CAAC;UACR,UAAU,EAAE;YAAC,KAAK,EAAA,KAAA;YAAE,MAAM,EAAA,MAAA;YAAE,WAAW,EAAE,KAAK,GAAG;UAAM,CAAC;UACxD,OAAO,EAAE;SACV,CAAC;QAEF;MACD;MAED,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,CAAC,GAAG,EAAE;QAC5C,SAAS,CAAC;UAAC,OAAO,EAAE;QAAI,CAAC,CAAC;QAE1B,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;UAC/B,cAAA,CAAA,KAAK,CAAC,kBAAkB,CACtB,MAAM,CAAC,GAAG,EACV,OAAO,EACP,UAAC,KAAK,EAAE,MAAM,EAAA;YACZ,OAAA,SAAS,CAAC;cACR,UAAU,EAAE;gBAAC,KAAK,EAAA,KAAA;gBAAE,MAAM,EAAA,MAAA;gBAAE,WAAW,EAAE,KAAK,GAAG;cAAM,CAAC;cACxD,OAAO,EAAE;aACV,CAAC;UAHF,CAGE,EACJ,UAAC,KAAK,EAAA;YAAK,OAAA,SAAS,CAAC;cAAC,KAAK,EAAA,KAAA;cAAE,OAAO,EAAE;YAAK,CAAC,CAAC;UAAlC,CAAkC,CAC9C;SACF,MAAM;UACL,cAAA,CAAA,KAAK,CAAC,OAAO,CACX,MAAM,CAAC,GAAG,EACV,UAAC,KAAK,EAAE,MAAM,EAAA;YACZ,OAAA,SAAS,CAAC;cACR,UAAU,EAAE;gBAAC,KAAK,EAAA,KAAA;gBAAE,MAAM,EAAA,MAAA;gBAAE,WAAW,EAAE,KAAK,GAAG;cAAM,CAAC;cACxD,OAAO,EAAE;aACV,CAAC;UAHF,CAGE,EACJ,UAAC,KAAK,EAAA;YAAK,OAAA,SAAS,CAAC;cAAC,KAAK,EAAA,KAAA;cAAE,OAAO,EAAE;YAAK,CAAC,CAAC;UAAlC,CAAkC,CAC9C;QACF;QAED;MACD;MAED,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC;KACnC,CAAC,OAAO,KAAK,EAAE;MACd,SAAS,CAAC;QAAC,KAAK,EAAA,KAAA;QAAE,OAAO,EAAE;MAAK,CAAC,CAAC;IACnC;EAEH,CAAC,EAAE,CAAC,OAAO,MAAM,KAAK,QAAQ,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,EAAE,OAAO,CAAC,CAAC;EAE/D,OAAO,MAAM;AACf;AAxDA,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useImageDimensions = void 0;\nvar react_1 = require(\"react\");\nvar react_native_1 = require(\"react-native\");\n/**\n * @param source either a remote URL or a local file resource.\n * @param headers headers to be passed to a remote URL resource.\n * @returns original image dimensions (width, height and aspect ratio).\n */\nfunction useImageDimensions(source, headers) {\n    var _a = react_1.useState({ loading: true }), result = _a[0], setResult = _a[1];\n    react_1.useEffect(function () {\n        try {\n            if (typeof source === 'number') {\n                var _a = react_native_1.Image.resolveAssetSource(source), width = _a.width, height = _a.height;\n                setResult({\n                    dimensions: { width: width, height: height, aspectRatio: width / height },\n                    loading: false,\n                });\n                return;\n            }\n            if (typeof source === 'object' && source.uri) {\n                setResult({ loading: true });\n                if (typeof headers === 'object') {\n                    react_native_1.Image.getSizeWithHeaders(source.uri, headers, function (width, height) {\n                        return setResult({\n                            dimensions: { width: width, height: height, aspectRatio: width / height },\n                            loading: false,\n                        });\n                    }, function (error) { return setResult({ error: error, loading: false }); });\n                }\n                else {\n                    react_native_1.Image.getSize(source.uri, function (width, height) {\n                        return setResult({\n                            dimensions: { width: width, height: height, aspectRatio: width / height },\n                            loading: false,\n                        });\n                    }, function (error) { return setResult({ error: error, loading: false }); });\n                }\n                return;\n            }\n            throw new Error('not implemented');\n        }\n        catch (error) {\n            setResult({ error: error, loading: false });\n        }\n        // eslint-disable-next-line\n    }, [typeof source === 'object' ? source.uri : source, headers]);\n    return result;\n}\nexports.useImageDimensions = useImageDimensions;\n//# sourceMappingURL=useImageDimensions.js.map"]},"metadata":{},"sourceType":"script"}