{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDeviceOrientation = void 0;\nvar react_1 = require(\"react\");\nvar react_native_1 = require(\"react-native-web/dist/index\");\nvar isOrientationPortrait = function isOrientationPortrait(_a) {\n  var width = _a.width,\n    height = _a.height;\n  return height >= width;\n};\nvar isOrientationLandscape = function isOrientationLandscape(_a) {\n  var width = _a.width,\n    height = _a.height;\n  return width >= height;\n};\nfunction useDeviceOrientation() {\n  var screen = react_native_1.Dimensions.get('screen');\n  var initialState = {\n    portrait: isOrientationPortrait(screen),\n    landscape: isOrientationLandscape(screen)\n  };\n  var _a = react_1.useState(initialState),\n    orientation = _a[0],\n    setOrientation = _a[1];\n  react_1.useEffect(function () {\n    var onChange = function onChange(_a) {\n      var screen = _a.screen;\n      setOrientation({\n        portrait: isOrientationPortrait(screen),\n        landscape: isOrientationLandscape(screen)\n      });\n    };\n    var subscription = react_native_1.Dimensions.addEventListener('change', onChange);\n    return function () {\n      if (typeof (subscription === null || subscription === void 0 ? void 0 : subscription.remove) === 'function') {\n        subscription.remove();\n      } else {\n        react_native_1.Dimensions.removeEventListener('change', onChange);\n      }\n    };\n  }, []);\n  return orientation;\n}\nexports.useDeviceOrientation = useDeviceOrientation;","map":{"version":3,"sources":["../src/useDeviceOrientation.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;AAAyC;AAGzC,IAAM,qBAAqB,GAAG,SAAxB,qBAAqB,CAAI,EAA2B,EAAA;MAA1B,KAAK,GAAA,EAAA,CAAA,KAAA;IAAE,MAAM,GAAA,EAAA,CAAA,MAAA;EAAkB,OAAA,MAAM,IAAI,KAAK;AAAf,CAAe;AAC9E,IAAM,sBAAsB,GAAG,SAAzB,sBAAsB,CAAI,EAA2B,EAAA;MAA1B,KAAK,GAAA,EAAA,CAAA,KAAA;IAAE,MAAM,GAAA,EAAA,CAAA,MAAA;EAAkB,OAAA,KAAK,IAAI,MAAM;AAAf,CAAe;AAE/E,SAAgB,oBAAoB,GAAA;EAClC,IAAM,MAAM,GAAG,cAAA,CAAA,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC;EACvC,IAAM,YAAY,GAAG;IACnB,QAAQ,EAAE,qBAAqB,CAAC,MAAM,CAAC;IACvC,SAAS,EAAE,sBAAsB,CAAC,MAAM;GACzC;EAEK,IAAA,EAAA,GAAgC,OAAA,CAAA,QAAQ,CAAC,YAAY,CAAC;IAArD,WAAW,GAAA,EAAA,CAAA,CAAA,CAAA;IAAE,cAAc,GAAA,EAAA,CAAA,CAAA,CAA0B;EAE5D,OAAA,CAAA,SAAS,CAAC,YAAA;IACR,IAAM,QAAQ,GAAG,SAAX,QAAQ,CAAI,EAA8B,EAAA;UAA7B,MAAM,GAAA,EAAA,CAAA,MAAA;MACvB,cAAc,CAAC;QACb,QAAQ,EAAE,qBAAqB,CAAC,MAAM,CAAC;QACvC,SAAS,EAAE,sBAAsB,CAAC,MAAM;OACzC,CAAC;IACJ,CAAC;IAED,IAAM,YAAY,GAAG,cAAA,CAAA,UAAU,CAAC,gBAAgB,CAAC,QAAQ,EAAE,QAAQ,CAAC;IAEpE,OAAO,YAAA;MAEL,IAAI,QAAO,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZ,YAAY,CAAE,MAAM,CAAA,KAAK,UAAU,EAAE;QAE9C,YAAY,CAAC,MAAM,EAAE;OACtB,MAAM;QAEL,cAAA,CAAA,UAAU,CAAC,mBAAmB,CAAC,QAAQ,EAAE,QAAQ,CAAC;MACnD;IACH,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,WAAW;AACpB;AAhCA,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useDeviceOrientation = void 0;\nvar react_1 = require(\"react\");\nvar react_native_1 = require(\"react-native\");\nvar isOrientationPortrait = function (_a) {\n    var width = _a.width, height = _a.height;\n    return height >= width;\n};\nvar isOrientationLandscape = function (_a) {\n    var width = _a.width, height = _a.height;\n    return width >= height;\n};\nfunction useDeviceOrientation() {\n    var screen = react_native_1.Dimensions.get('screen');\n    var initialState = {\n        portrait: isOrientationPortrait(screen),\n        landscape: isOrientationLandscape(screen),\n    };\n    var _a = react_1.useState(initialState), orientation = _a[0], setOrientation = _a[1];\n    react_1.useEffect(function () {\n        var onChange = function (_a) {\n            var screen = _a.screen;\n            setOrientation({\n                portrait: isOrientationPortrait(screen),\n                landscape: isOrientationLandscape(screen),\n            });\n        };\n        var subscription = react_native_1.Dimensions.addEventListener('change', onChange);\n        return function () {\n            // @ts-expect-error - React Native >= 0.65\n            if (typeof (subscription === null || subscription === void 0 ? void 0 : subscription.remove) === 'function') {\n                // @ts-expect-error - need update @types/react-native@0.65.x\n                subscription.remove();\n            }\n            else {\n                // React Native < 0.65\n                react_native_1.Dimensions.removeEventListener('change', onChange);\n            }\n        };\n    }, []);\n    return orientation;\n}\nexports.useDeviceOrientation = useDeviceOrientation;\n//# sourceMappingURL=useDeviceOrientation.js.map"]},"metadata":{},"sourceType":"script"}